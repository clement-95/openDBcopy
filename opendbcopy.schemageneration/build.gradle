/**
 ===============================================================
 Ant build file

 Copyright (C) 2003 Anthony Smith
 ===============================================================

 This program is free software; you can redistribute it and/or
 modify it under the terms of the GNU General Public License
 as published by the Free Software Foundation; either version 2
 of the License, or (at your option) any later version.

 This program is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 GNU General Public License for more details.

 You should have received a copy of the GNU General Public License
 along with this program; if not, write to the Free Software
 Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 ===============================================================
 */

dependencies {
    implementation group: 'org.hibernate', name: 'hibernate-core', version: '5.3.0.CR1'
    implementation group: 'org.hibernate', name: 'hibernate-tools', version: '5.2.10.Final'

    testImplementation group: 'com.h2database', name: 'h2', version: '1.4.196'
}

apply from: 'properties.gradle'

defaultTasks 'deploy'

task prepare {
    mkdir(buildDir.name)
    mkdir("$distDir/$pluginName")
    mkdir(javadocDir)
}

task preparehbm {
    mkdir(hbmDir + "/src")
    mkdir(hbmDir + "/classes")
}

/**
 =============================================================
 Compiles the source code
 =============================================================
 */
task compile(dependsOn: 'prepare', type: JavaCompile) {
    copy {
        from sourceSets.main.resources
        into buildDir.name
    }
    source = sourceSets.main.java.srcDirs
    destinationDir = buildDir
    classpath = sourceSets.main.compileClasspath
}

clean {
    delete buildDir.name
}

task cleanhbm(type: Delete) {
    delete fileTree(hbmDir) {
        include '**/*.java', '**/*.class'
    }
}

task rebuild(dependsOn: ['clean', 'compile'])

task createjar(dependsOn: 'compile', type: Jar) {
    archiveName "$pluginJar"
    destinationDir libsDir
    from buildDir.name
    from sourceSets.main.java.srcDirs
}

task deploy(dependsOn: ['clean', 'compile', 'createjar']) {
    delete "${OPENDBCOPY_HOME}/plugins/${pluginName}"

    copy {
        from pluginFile
        from codegenConfig
        from "gradle.properties"
        from 'build.gradle'
        from 'README'
        into "$OPENDBCOPY_HOME/plugins/$pluginName"
    }
//
//    copy {
//        from "${OPENDBCOPY_HOME}/plugins/${pluginName}/lib"
//        into "${libDir}"
//    }

    copy {
        from "$OPENDBCOPY_HOME/plugins/$pluginName/hbm"
        into hbmDir
    }
}

task dist(dependsOn: ['clean', 'jar', 'javadoc'], type: Zip) {
    delete distDir

    copy {
        from pluginFile
        from guiFile
        from codegenConfig
        from 'properties.gradle'
        from 'build.gradle'
        from 'README'
        into "$distDir/$pluginName"
    }

    /**
     <copy todir="${dist.dir}/${plugin.name}/lib">
     <fileset dir="${lib.dir}"/>
     </copy>
     */

    copy {
        from sourceSets.main.java.srcDirs
        into "$distDir/$pluginName/src"
    }

    copy {
        from sourceSets.main.resources
        into "$distDir/$pluginName/resources"
    }

    /**
     <copy todir="${dist.dir}/${plugin.name}/apidocs">
     <fileset dir="${javadoc.dir}"/>
     </copy>
     */

    from distDir
//    include '*/*' //to include contents of a folder
    archiveName "${packageName}.zip"
    destinationDir file(distDir)
}

