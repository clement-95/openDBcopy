<?xml version="1.0" encoding="UTF-8"?>

<!-- =============================================================== -->
<!-- Ant build file                                              -->
<!-- =============================================================== -->

<project name="opendbcopy" default="deployjar2plugins" basedir=".">

    <!-- ============================================================= -->
    <!-- Create IzPack installable jar                                 -->
    <!-- ============================================================= -->
    <target name="installer" depends="jar">
        <!-- delete standard jars in plugin directories -->
        <delete>
            <fileset dir="plugins"
                     includes="**/opendbcopy.jar, **/jdom.jar, **/log4j-1.2.8.jar, **/commons-lang-2.0.jar, **/xerces.jar, **/TableLayout.jar, **/ostermillerutils_1_03_00.jar"/>
        </delete>

        <!-- opendbcopy.schemageneration requires additional libs and hbm directory removed -->
        <copy file="${lib.dir}/jdom.jar" todir="plugins/opendbcopy.schemageneration/lib"/>
        <copy file="${lib.dir}/log4j-1.2.8.jar" todir="plugins/opendbcopy.schemageneration/lib"/>
        <copy file="${lib.dir}/commons-lang-2.0.jar" todir="plugins/opendbcopy.schemageneration/lib"/>
        <copy file="${lib.dir}/xerces.jar" todir="plugins/opendbcopy.schemageneration/lib"/>
        <delete>
            <fileset dir="plugins/opendbcopy.schemageneration" includes="**/hibernate.properties, **/*.hbm.xml"/>
        </delete>

        <taskdef name="izpack" classpath="${basedir}/tools/IzPack/lib/compiler.jar"
                 classname="com.izforge.izpack.ant.IzPackTask"/>

        <izpack input="${install.file}"
                output="${dist.dir}/${installable.jar}"
                installerType="${install.type}"
                basedir="${basedir}"
                izPackDir="${basedir}/tools/IzPack"/>
        <echo>1) Please ensure that maven site:generate has been executed before installer</echo>
        <echo>2) App Version was changed in project.xml, install.xml, build.xml</echo>
        <echo>3) CVS checked in for proper java headers</echo>
    </target>

    <!-- ============================================================= -->
    <!-- Creates checkstyle report                                     -->
    <!-- ============================================================= -->
    <target name="checkstyle" description="Check code style for compliance with coding standards">
        <!-- definition is here because not all users will have tools installed -->
        <property name="checkstyle.dir" value="${basedir}/tools/checkstyle-3.1"/>
        <patternset id="java.files.pattern" includes="**/*.java"/>

        <property name="checkstyle.data.dir" location="${build.dir}/docs/checkstyle"/>
        <property name="checkstyle.data.file" location="${checkstyle.data.dir}/checkstyle.xml"/>
        <property name="checkstyle.report.file" location="${checkstyle.data.dir}/checkstyle.html"/>
        <property name="checkstyle.xsl.file" location="${checkstyle.dir}/contrib/checkstyle-noframes.xsl"/>
        <mkdir dir="${checkstyle.data.dir}"/>
        <taskdef resource="checkstyletask.properties" classpath="${checkstyle.dir}/${checkstyle.jar}"/>
        <checkstyle
                config="${checkstyle.dir}/${checkstyle.file}"
                failOnViolation="false"
                failureProperty="checkstyle.failure">
            <fileset dir="src">
                <patternset refid="java.files.pattern"/>
            </fileset>

            <!-- uncomment to print to console as well -->
            <!--formatter type="plain"/-->
            <formatter type="xml" toFile="${checkstyle.data.file}"/>
        </checkstyle>
        <xslt in="${checkstyle.data.file}" out="${checkstyle.report.file}" style="${checkstyle.xsl.file}"/>
    </target>
</project>
